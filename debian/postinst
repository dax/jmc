#! /bin/sh
# postinst script for jabber-pyaim
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

case "$1" in
    configure)
	uid=`getent passwd jabber | cut -d ":" -f 3`

	# if there is the uid the account is there and we can do
	# the sanit(ar)y checks otherwise we can safely create it.

	if [ "$uid" ]; then
	    # guess??? the checks!!!
	    if [ $uid -ge 100 ] && [ $uid -le 999 ]; then
	    	echo "jabber uid check: ok"
	    else
	   	echo "ERROR: jabber account has a non-system uid!"
		exit 1
	    fi
	else
	    adduser --quiet \
	            --system \
	            --disabled-password \
	            --home /var/run/jabber \
		    --no-create-home \
		    --shell /bin/false \
			jabber 
	fi
	chown jabber:daemon /var/spool/jabber
	chown jabber:daemon /var/run/jabber
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


